Jason's Mixer

MIXstartup
MIXshutdown
MIXplaysample
MIXsetvolume

MIX Oscillator - 256 bytes per Oscillator - why 256 bytes?

256 bytes, and page aligned, the oscillator can live in the direct page
Oscillator code, can be optimized to use DP variables, and we can run the next
Oscillator by moving to another page

The plan is to support different Oscillator types, I
plan on having support for 4 types of Oscillators

8  bit PCM    - MOD
16 bit PCM    - MIDI
16 bit ADPCM  - Standard
16 bit BRR    - SNES 

Future Oscillators might support ADSR (Attack Decay Sustain Release)
Or they might support SNES BRR format
Or they could support Apple IIgs format PCM audio
Someone might tackle ORBIS encoding

Having plenty of scratch space seems like a good idea, 256 bytes is a lot,
but also if the decoder is complex, it might not be challenge to fit it all
in there.

- I think some parts of the OSCillator needs to be common to all OSC types

; --- for now, wave data is not allowed to cross bank boundary, so largest
; sample is 65536 bytes in size

; - for now an oscillator is 32 bytes - allowing some extra space
; for specific types to keep track of type specific information
;
        ds 2  ; Version/Type - what type of OSC is this (which decoder is called)
        ds 2  ; state, stopped or playing
        ds 4  ; pWave Data - Current Pointer to the Wave data                   (24.8)
        ds 4  ; pWave Data Loop Point - when we reach the end, where do we loop (24.8)
              ; if it's zero, perhaps this means no loop
        ds 4  ; pWave End  - Pointer to the end of the wave data
        ds 2  ; Playback frequency  8.8
        ds 2  ; Left Volume  - 8.8
        ds 2  ; Right Volume - 8.8

-------------------------------------------------------------------------------

Direct Page Addresses

pSourceSample = 0  ; 24.8 address
pDestFIFO     = 4  ; address of output
SampleRate    = 8  ; 24.8 sample rate

        ldx #256
]lp
        lda [pSourceSample+1]
        sta [pDestFIFO]

        clc
        lda <pSourceSample
        adc <SampleRate
        sta <pSourceSample
        lda <pSourceSample+2
        adc <SampleRate+2
        sta <pSourceSample+2

        inc <pDestFIFO
        dex
        bne ]lp








